let url = $request.url
let body = JSON.parse($response.body)
let headers = $request.headers

//最近7天的u本位合约余额数据，正序排列，时间小的在前面
let u_balance_list_7 = [
283410.68,
304307.35,
314731.52,
304328.28,
304247.21,
314229.76,
314152.69
]; //需保证数据为7条

//------------------------------------------------------30
let u_balance_list_30 = [
250779.56,
260635.77,
260565.80,
271554.86,
249618.10,
249539.80,
249469.68,
260532.82,
260451.72,
272105.95,
295536.51,
295470.28,
296032.72,
295962.60,
285697.49,
285628.50,
296593.91,
306573.92,
283914.39,
283855.28,
295112.05,
283551.61,
283480.41,
283410.68,
304307.35,
314731.52,
304328.28,
304247.21,
314229.76,
314152.69
];//需保证数据为30条

//------------------------------------------------------90
let u_balance_list_90 = [
132260.72,
132260.72,
132260.72,
132148.65,
131084.74,
130966.12,
128923.71,
128804.52,
128678.64,
157337.79,
151374.46,
148907.85,
148799.75,
148707.66,
147281.30,
171888.29,
171888.29,
171888.29,
170862.22,
167211.10,
178174.16,
177163.20,
195568.33,
189488.00,
187451.01,
186405.38,
186290.36,
198746.43,
217805.47,
220368.70,
209473.58,
207017.25,
202122.23,
201906.60,
201641.49,
201919.69,
212888.92,
210902.26,
207027.12,
206117.52,
221760.01,
218070.45,
215613.89,
213594.75,
213531.15,
209234.85,
228198.24,
228141.83,
228066.63,
240053.05,
239156.84,
238387.73,
251387.04,
240576.90,
240576.90,
240576.90,
240576.90,
240498.02,
240427.69,
240323.47,
250779.56,
260635.77,
260565.80,
271554.86,
249618.10,
249539.80,
249469.68,
260532.82,
260451.72,
272105.95,
295536.51,
295470.28,
296032.72,
295962.60,
285697.49,
285628.50,
296593.91,
306573.92,
283914.39,
283855.28,
295112.05,
283551.61,
283480.41,
283410.68,
304307.35,
314731.52,
304328.28,
304247.21,
314229.76,
314152.69
 ];//需保证数据为90条
//------------------------------------------------------365
let u_balance_list_365 = [
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
0.00,
23.66,
919.87,
883.34,
858.78,
915.10,
345.90,
474.81,
453.26,
430.16,
-2288.85,
-6206.50,
4308.44,
2299.59,
11382.68,
11322.66,
11207.52,
9978.91,
7296.29,
18966.04,
18766.07,
18670.59,
18554.42,
17363.81,
15079.13,
25932.01,
20996.28,
19800.11,
18424.67,
18305.80,
29570.81,
28396.77,
25858.36,
24743.28,
25014.77,
23820.92,
21773.16,
21773.16,
17791.05,
16770.96,
16652.24,
15525.22,
15399.56,
13235.99,
13109.73,
10792.64,
8179.71,
8065.19,
7967.64,
6456.67,
32523.39,
32523.39,
32523.39,
31436.46,
27568.74,
39182.15,
38111.22,
57608.18,
51167.15,
49009.33,
47901.67,
47779.82,
60974.81,
71164.47,
73879.76,
82636.61,
76649.06,
73995.61,
72906.95,
71880.72,
69313.97,
65615.71,
84981.82,
83085.46,
119979.90,
119923.24,
119814.55,
118654.74,
116122.35,
136578.59,
136389.82,
136299.69,
136190.02,
135066.09,
132909.35,
149762.47,
145103.14,
143973.95,
142675.54,
142563.32,
142453.70,
141345.41,
138949.15,
137896.52,
138152.80,
137025.81,
132260.72,
132260.72,
132260.72,
132260.72,
132148.65,
131084.74,
130966.12,
128923.71,
128804.52,
128678.64,
157337.79,
151374.46,
148907.85,
148799.75,
148707.66,
147281.30,
171888.29,
171888.29,
171888.29,
170862.22,
167211.10,
178174.16,
177163.20,
195568.33,
189488.00,
187451.01,
186405.38,
186290.36,
198746.43,
217805.47,
220368.70,
209473.58,
207017.25,
202122.23,
201906.60,
201641.49,
201919.69,
212888.92,
210902.26,
207027.12,
206117.52,
221760.01,
218070.45,
215613.89,
213594.75,
213531.15,
209234.85,
228198.24,
228141.83,
228066.63,
240053.05,
239156.84,
238387.73,
251387.04,
240576.90,
240576.90,
240576.90,
240576.90,
240498.02,
240427.69,
240323.47,
250779.56,
260635.77,
260565.80,
271554.86,
249618.10,
249539.80,
249469.68,
260532.82,
260451.72,
272105.95,
295536.51,
295470.28,
296032.72,
295962.60,
285697.49,
285628.50,
296593.91,
306573.92,
283914.39,
283855.28,
295112.05,
283551.61,
283480.41,
283410.68,
304307.35,
314731.52,
304328.28,
304247.21,
314229.76,
314152.69
];//需保证数据为30条

//最近7天的币本位合约余额数据，正序排列，时间小的在前面
let b_balance_list_7 = [];
let b_balance_list_30 = [];

function callApi(url, onSuccess, onError) {
    $httpClient.get(url, (error, response, data) => {
        if (!error && response.statusCode === 200) {
            onSuccess(data);
        } else {
            onError(error);
        }
    });
}


callApi("https://doc.ccore.cc/cache/get?id="+headers['x-trace-id'],function (res) {
    try {
        let requestBody = JSON.parse(res)
        if (url.indexOf('futures/v1/private/future/user-daily-profit/getNewUserProfitStatistic') !== -1) {
            let beginTime = requestBody.beginTime;
            let endTime = requestBody.endTime;
            let business = requestBody.business;
            let diff = (endTime - beginTime) / 60 / 60 / 24 / 1000 + 1;

            let data = body.data;
            let balanceList = [];
            if (business === 'USDT_FUTURES') {
                if (diff === 7) {
                    balanceList = u_balance_list_7;
                }
                if (diff === 30) {
                    balanceList = u_balance_list_30
                }
                if (diff === 90) {
                    balanceList = u_balance_list_90;
                }
                if (diff === 365) {
                    balanceList = u_balance_list_365;
                }
            }

            if (balanceList.length >= 7) {
                let profitNum = 0;
                let fairNum = 1;
                let totalProfit = 0;
                let totalLoss = 0;
                let userProfitRets = data.userProfitRets;
                userProfitRets.forEach((item, index) => {
                    //余额，用于计算累计盈亏和累计盈亏率，例如7天累计盈亏 = 当天余额 - 7天前的余额
                    item.balance = balanceList[index];
                    if (index > 0) {
                        //单日盈亏(当前余额 - 前一天的余额)
                        item.profit = item.balance - balanceList[index - 1];
                        if (item.profit > 0) {
                            //记录盈利天数
                            profitNum = profitNum + 1;
                            //记录累计盈利金额
                            totalProfit = totalProfit + item.profit;
                        } else if (item.profit === 0) {
                            //记录持平天数
                            fairNum = fairNum + 1;
                        } else {
                            //记录累计亏损金额
                            totalLoss = totalLoss + item.profit;
                        }
                    } else {
                        //单日盈亏（第一天为0）
                        item.profit = 0;
                    }
                    //净划入
                    item.transferIn = 0;
                });

                //盈利天数
                data.profitDays = profitNum;
                //亏损天数
                data.lossDays = balanceList.length - profitNum - fairNum;
                //持平天数
                data.fairDays = fairNum;
                //胜率
                data.winDaysRate = (profitNum * 100 / balanceList.length).toFixed(2);
                //总盈利
                data.totalProfit = totalProfit;
                //总亏损
                data.totalLoss = totalLoss * -1;
                //净盈利/亏损
                data.netProfit = data.totalProfit - data.totalLoss;
            }

            $done({body: JSON.stringify(body)})
        } else {
            $done({})
        }
    } catch (e) {
        let data = body.data;
        data = {};
        $done({body: JSON.stringify(body)})
    }
},function (err) {
    $done({})
})
